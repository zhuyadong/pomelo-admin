"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function composeRequest(id, moduleId, body) {
    if (id) {
        // request message
        return JSON.stringify({
            reqId: id,
            moduleId: moduleId,
            body: body
        });
    }
    else {
        // notify message
        return {
            moduleId: moduleId,
            body: body
        };
    }
}
exports.composeRequest = composeRequest;
function composeResponse(req, err, res) {
    if (req.reqId) {
        // request only
        return JSON.stringify({
            respId: req.reqId,
            error: cloneError(err),
            body: res
        });
    }
    // invalid message(notify dose not need response)
    return null;
}
exports.composeResponse = composeResponse;
function composeCommand(id, command, moduleId, body) {
    if (id) {
        // command message
        return JSON.stringify({
            reqId: id,
            command: command,
            moduleId: moduleId,
            body: body
        });
    }
    else {
        return JSON.stringify({
            command: command,
            moduleId: moduleId,
            body: body
        });
    }
}
exports.composeCommand = composeCommand;
function parse(msg) {
    if (typeof msg === "string") {
        return JSON.parse(msg);
    }
    return msg;
}
exports.parse = parse;
function isRequest(msg) {
    return msg && msg.reqId;
}
exports.isRequest = isRequest;
function cloneError(origin) {
    // copy the stack infos for Error instance json result is empty
    if (!(origin instanceof Error)) {
        return origin;
    }
    var res = {
        message: origin.message,
        stack: origin.stack
    };
    return res;
}
exports.PRO_OK = 1;
exports.PRO_FAIL = -1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdG9jb2wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJwcm90b2NvbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQU1BLHdCQUErQixFQUFVLEVBQUUsUUFBZ0IsRUFBRSxJQUFTO0lBQ3JFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDUixrQkFBa0I7UUFDbEIsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDckIsS0FBSyxFQUFFLEVBQUU7WUFDVCxRQUFRLEVBQUUsUUFBUTtZQUNsQixJQUFJLEVBQUUsSUFBSTtTQUNWLENBQUMsQ0FBQztJQUNKLENBQUM7SUFBQyxJQUFJLENBQUMsQ0FBQztRQUNQLGlCQUFpQjtRQUNqQixNQUFNLENBQUM7WUFDTixRQUFRLEVBQUUsUUFBUTtZQUNsQixJQUFJLEVBQUUsSUFBSTtTQUNWLENBQUM7SUFDSCxDQUFDO0FBQ0YsQ0FBQztBQWZELHdDQWVDO0FBRUQseUJBQWdDLEdBQVksRUFBRSxHQUFRLEVBQUUsR0FBUTtJQUMvRCxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNmLGVBQWU7UUFDZixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNyQixNQUFNLEVBQUUsR0FBRyxDQUFDLEtBQUs7WUFDakIsS0FBSyxFQUFFLFVBQVUsQ0FBQyxHQUFHLENBQUM7WUFDdEIsSUFBSSxFQUFFLEdBQUc7U0FDVCxDQUFDLENBQUM7SUFDSixDQUFDO0lBQ0QsaURBQWlEO0lBQ2pELE1BQU0sQ0FBQyxJQUFJLENBQUM7QUFDYixDQUFDO0FBWEQsMENBV0M7QUFFRCx3QkFDQyxFQUFVLEVBQ1YsT0FBZSxFQUNmLFFBQWdCLEVBQ2hCLElBQVM7SUFFVCxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ1Isa0JBQWtCO1FBQ2xCLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ3JCLEtBQUssRUFBRSxFQUFFO1lBQ1QsT0FBTyxFQUFFLE9BQU87WUFDaEIsUUFBUSxFQUFFLFFBQVE7WUFDbEIsSUFBSSxFQUFFLElBQUk7U0FDVixDQUFDLENBQUM7SUFDSixDQUFDO0lBQUMsSUFBSSxDQUFDLENBQUM7UUFDUCxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNyQixPQUFPLEVBQUUsT0FBTztZQUNoQixRQUFRLEVBQUUsUUFBUTtZQUNsQixJQUFJLEVBQUUsSUFBSTtTQUNWLENBQUMsQ0FBQztJQUNKLENBQUM7QUFDRixDQUFDO0FBckJELHdDQXFCQztBQUVELGVBQXNCLEdBQVE7SUFDN0IsRUFBRSxDQUFDLENBQUMsT0FBTyxHQUFHLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQztRQUM3QixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBQ0QsTUFBTSxDQUFDLEdBQUcsQ0FBQztBQUNaLENBQUM7QUFMRCxzQkFLQztBQUVELG1CQUEwQixHQUFRO0lBQ2pDLE1BQU0sQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQztBQUN6QixDQUFDO0FBRkQsOEJBRUM7QUFFRCxvQkFBb0IsTUFBVztJQUM5QiwrREFBK0Q7SUFDL0QsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sWUFBWSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEMsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNmLENBQUM7SUFDRCxJQUFJLEdBQUcsR0FBRztRQUNULE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTztRQUN2QixLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUs7S0FDbkIsQ0FBQztJQUNGLE1BQU0sQ0FBQyxHQUFHLENBQUM7QUFDWixDQUFDO0FBRVksUUFBQSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0FBQ1gsUUFBQSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIFJlcXVlc3Qge1xuXHRyZXFJZD86IHN0cmluZztcblx0bW9kdWxlSWQ6IHN0cmluZztcblx0Ym9keTogYW55O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29tcG9zZVJlcXVlc3QoaWQ6IG51bWJlciwgbW9kdWxlSWQ6IHN0cmluZywgYm9keTogYW55KSB7XG5cdGlmIChpZCkge1xuXHRcdC8vIHJlcXVlc3QgbWVzc2FnZVxuXHRcdHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG5cdFx0XHRyZXFJZDogaWQsXG5cdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRib2R5OiBib2R5XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0Ly8gbm90aWZ5IG1lc3NhZ2Vcblx0XHRyZXR1cm4ge1xuXHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuXHRcdFx0Ym9keTogYm9keVxuXHRcdH07XG5cdH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBvc2VSZXNwb25zZShyZXE6IFJlcXVlc3QsIGVycjogYW55LCByZXM6IGFueSkge1xuXHRpZiAocmVxLnJlcUlkKSB7XG5cdFx0Ly8gcmVxdWVzdCBvbmx5XG5cdFx0cmV0dXJuIEpTT04uc3RyaW5naWZ5KHtcblx0XHRcdHJlc3BJZDogcmVxLnJlcUlkLFxuXHRcdFx0ZXJyb3I6IGNsb25lRXJyb3IoZXJyKSxcblx0XHRcdGJvZHk6IHJlc1xuXHRcdH0pO1xuXHR9XG5cdC8vIGludmFsaWQgbWVzc2FnZShub3RpZnkgZG9zZSBub3QgbmVlZCByZXNwb25zZSlcblx0cmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21wb3NlQ29tbWFuZChcblx0aWQ6IG51bWJlcixcblx0Y29tbWFuZDogc3RyaW5nLFxuXHRtb2R1bGVJZDogc3RyaW5nLFxuXHRib2R5OiBhbnlcbikge1xuXHRpZiAoaWQpIHtcblx0XHQvLyBjb21tYW5kIG1lc3NhZ2Vcblx0XHRyZXR1cm4gSlNPTi5zdHJpbmdpZnkoe1xuXHRcdFx0cmVxSWQ6IGlkLFxuXHRcdFx0Y29tbWFuZDogY29tbWFuZCxcblx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcblx0XHRcdGJvZHk6IGJvZHlcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHRyZXR1cm4gSlNPTi5zdHJpbmdpZnkoe1xuXHRcdFx0Y29tbWFuZDogY29tbWFuZCxcblx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZCxcblx0XHRcdGJvZHk6IGJvZHlcblx0XHR9KTtcblx0fVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UobXNnOiBhbnkpIHtcblx0aWYgKHR5cGVvZiBtc2cgPT09IFwic3RyaW5nXCIpIHtcblx0XHRyZXR1cm4gSlNPTi5wYXJzZShtc2cpO1xuXHR9XG5cdHJldHVybiBtc2c7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1JlcXVlc3QobXNnOiBhbnkpIHtcblx0cmV0dXJuIG1zZyAmJiBtc2cucmVxSWQ7XG59XG5cbmZ1bmN0aW9uIGNsb25lRXJyb3Iob3JpZ2luOiBhbnkpIHtcblx0Ly8gY29weSB0aGUgc3RhY2sgaW5mb3MgZm9yIEVycm9yIGluc3RhbmNlIGpzb24gcmVzdWx0IGlzIGVtcHR5XG5cdGlmICghKG9yaWdpbiBpbnN0YW5jZW9mIEVycm9yKSkge1xuXHRcdHJldHVybiBvcmlnaW47XG5cdH1cblx0dmFyIHJlcyA9IHtcblx0XHRtZXNzYWdlOiBvcmlnaW4ubWVzc2FnZSxcblx0XHRzdGFjazogb3JpZ2luLnN0YWNrXG5cdH07XG5cdHJldHVybiByZXM7XG59XG5cbmV4cG9ydCBjb25zdCBQUk9fT0sgPSAxO1xuZXhwb3J0IGNvbnN0IFBST19GQUlMID0gLTE7XG4iXX0=